var b2Collision=Class.create();b2Collision.prototype={initialize:function(){}},b2Collision.b2_nullFeature=255,b2Collision.ClipSegmentToLine=function(i,o,e,n){var r=0,t=o[0].v,l=o[1].v,a=b2Math.b2Dot(e,o[0].v)-n,s=b2Math.b2Dot(e,o[1].v)-n;if(0>=a&&(i[r++]=o[0]),0>=s&&(i[r++]=o[1]),0>a*s){var m=a/(a-s),c=i[r].v;c.x=t.x+m*(l.x-t.x),c.y=t.y+m*(l.y-t.y),i[r].id=a>0?o[0].id:o[1].id,++r}return r},b2Collision.EdgeSeparation=function(i,o,e){var n=i.m_vertices,r=e.m_vertexCount,t=e.m_vertices,l=i.m_normals[o].x,a=i.m_normals[o].y,s=l,m=i.m_R;l=m.col1.x*s+m.col2.x*a,a=m.col1.y*s+m.col2.y*a;var c=l,x=a;m=e.m_R,s=c*m.col1.x+x*m.col1.y,x=c*m.col2.x+x*m.col2.y,c=s;for(var _=0,y=Number.MAX_VALUE,v=0;r>v;++v){var u=t[v],p=u.x*c+u.y*x;y>p&&(y=p,_=v)}m=i.m_R;var d=i.m_position.x+(m.col1.x*n[o].x+m.col2.x*n[o].y),C=i.m_position.y+(m.col1.y*n[o].x+m.col2.y*n[o].y);m=e.m_R;var f=e.m_position.x+(m.col1.x*t[_].x+m.col2.x*t[_].y),b=e.m_position.y+(m.col1.y*t[_].x+m.col2.y*t[_].y);f-=d,b-=C;var V=f*l+b*a;return V},b2Collision.FindMaxSeparation=function(i,o,e,n){for(var r=o.m_vertexCount,t=e.m_position.x-o.m_position.x,l=e.m_position.y-o.m_position.y,a=t*o.m_R.col1.x+l*o.m_R.col1.y,s=t*o.m_R.col2.x+l*o.m_R.col2.y,m=0,c=-Number.MAX_VALUE,x=0;r>x;++x){var _=o.m_normals[x].x*a+o.m_normals[x].y*s;_>c&&(c=_,m=x)}var y=b2Collision.EdgeSeparation(o,m,e);if(y>0&&0==n)return y;var v=m-1>=0?m-1:r-1,u=b2Collision.EdgeSeparation(o,v,e);if(u>0&&0==n)return u;var p=r>m+1?m+1:0,d=b2Collision.EdgeSeparation(o,p,e);if(d>0&&0==n)return d;var C,f=0,b=0;if(u>y&&u>d)b=-1,f=v,C=u;else{if(!(d>y))return i[0]=m,y;b=1,f=p,C=d}for(;;){if(m=-1==b?f-1>=0?f-1:r-1:r>f+1?f+1:0,y=b2Collision.EdgeSeparation(o,m,e),y>0&&0==n)return y;if(!(y>C))break;f=m,C=y}return i[0]=f,C},b2Collision.FindIncidentEdge=function(i,o,e,n){var r=o.m_vertexCount,t=o.m_vertices,l=n.m_vertexCount,a=n.m_vertices,s=e,m=e+1==r?0:e+1,c=t[m],x=c.x,_=c.y;c=t[s],x-=c.x,_-=c.y;var y=x;x=_,_=-y;var v=1/Math.sqrt(x*x+_*_);x*=v,_*=v;var u=x,p=_;y=u;var d=o.m_R;u=d.col1.x*y+d.col2.x*p,p=d.col1.y*y+d.col2.y*p;var C=u,f=p;d=n.m_R,y=C*d.col1.x+f*d.col1.y,f=C*d.col2.x+f*d.col2.y,C=y;for(var b=0,V=0,M=Number.MAX_VALUE,S=0;l>S;++S){var E=S,F=l>S+1?S+1:0;c=a[F];var g=c.x,R=c.y;c=a[E],g-=c.x,R-=c.y,y=g,g=R,R=-y,v=1/Math.sqrt(g*g+R*R),g*=v,R*=v;var A=g*C+R*f;M>A&&(M=A,b=E,V=F)}var L;L=i[0],c=L.v,c.SetV(a[b]),c.MulM(n.m_R),c.Add(n.m_position),L.id.features.referenceFace=e,L.id.features.incidentEdge=b,L.id.features.incidentVertex=b,L=i[1],c=L.v,c.SetV(a[V]),c.MulM(n.m_R),c.Add(n.m_position),L.id.features.referenceFace=e,L.id.features.incidentEdge=b,L.id.features.incidentVertex=V},b2Collision.b2CollidePolyTempVec=new b2Vec2,b2Collision.b2CollidePoly=function(i,o,e,n){i.pointCount=0;var r=0,t=[r],l=b2Collision.FindMaxSeparation(t,o,e,n);if(r=t[0],!(l>0&&0==n)){var a=0,s=[a],m=b2Collision.FindMaxSeparation(s,e,o,n);if(a=s[0],!(m>0&&0==n)){var c,x,_=0,y=0,v=.98,u=.001;m>v*l+u?(c=e,x=o,_=a,y=1):(c=o,x=e,_=r,y=0);var p=[new ClipVertex,new ClipVertex];b2Collision.FindIncidentEdge(p,c,_,x);var d=c.m_vertexCount,C=c.m_vertices,f=C[_],b=d>_+1?C[_+1]:C[0],V=(b.x-f.x,b.y-f.y,b.x-f.x),M=b.y-f.y,S=V,E=c.m_R;V=E.col1.x*S+E.col2.x*M,M=E.col1.y*S+E.col2.y*M;var F=1/Math.sqrt(V*V+M*M);V*=F,M*=F;var g=V,R=M;S=g,g=R,R=-S;var A=f.x,L=f.y;S=A,E=c.m_R,A=E.col1.x*S+E.col2.x*L,L=E.col1.y*S+E.col2.y*L,A+=c.m_position.x,L+=c.m_position.y;var N=b.x,h=b.y;S=N,E=c.m_R,N=E.col1.x*S+E.col2.x*h,h=E.col1.y*S+E.col2.y*h,N+=c.m_position.x,h+=c.m_position.y;var T=g*A+R*L,P=-(V*A+M*L),q=V*N+M*h,w=[new ClipVertex,new ClipVertex],U=[new ClipVertex,new ClipVertex],I=0;if(b2Collision.b2CollidePolyTempVec.Set(-V,-M),I=b2Collision.ClipSegmentToLine(w,p,b2Collision.b2CollidePolyTempVec,P),!(2>I||(b2Collision.b2CollidePolyTempVec.Set(V,M),I=b2Collision.ClipSegmentToLine(U,w,b2Collision.b2CollidePolyTempVec,q),2>I))){y?i.normal.Set(-g,-R):i.normal.Set(g,R);for(var X=0,k=0;k<b2Settings.b2_maxManifoldPoints;++k){var D=U[k].v,z=g*D.x+R*D.y-T;if(0>=z||1==n){var O=i.points[X];O.separation=z,O.position.SetV(U[k].v),O.id.Set(U[k].id),O.id.features.flip=y,++X}}i.pointCount=X}}}},b2Collision.b2CollideCircle=function(i,o,e,n){i.pointCount=0;var r=e.m_position.x-o.m_position.x,t=e.m_position.y-o.m_position.y,l=r*r+t*t,a=o.m_radius+e.m_radius;if(!(l>a*a&&0==n)){var s;if(l<Number.MIN_VALUE)s=-a,i.normal.Set(0,1);else{var m=Math.sqrt(l);s=m-a;var c=1/m;i.normal.x=c*r,i.normal.y=c*t}i.pointCount=1;var x=i.points[0];x.id.set_key(0),x.separation=s,x.position.x=e.m_position.x-e.m_radius*i.normal.x,x.position.y=e.m_position.y-e.m_radius*i.normal.y}},b2Collision.b2CollidePolyAndCircle=function(i,o,e){i.pointCount=0;var n,r,t,l=e.m_position.x-o.m_position.x,a=e.m_position.y-o.m_position.y,s=o.m_R,m=l*s.col1.x+a*s.col1.y;a=l*s.col2.x+a*s.col2.y,l=m;for(var c,x=0,_=-Number.MAX_VALUE,y=e.m_radius,v=0;v<o.m_vertexCount;++v){var u=o.m_normals[v].x*(l-o.m_vertices[v].x)+o.m_normals[v].y*(a-o.m_vertices[v].y);if(u>y)return;u>_&&(_=u,x=v)}if(_<Number.MIN_VALUE){i.pointCount=1;var p=o.m_normals[x];return i.normal.x=s.col1.x*p.x+s.col2.x*p.y,i.normal.y=s.col1.y*p.x+s.col2.y*p.y,n=i.points[0],n.id.features.incidentEdge=x,n.id.features.incidentVertex=b2Collision.b2_nullFeature,n.id.features.referenceFace=b2Collision.b2_nullFeature,n.id.features.flip=0,n.position.x=e.m_position.x-y*i.normal.x,n.position.y=e.m_position.y-y*i.normal.y,void(n.separation=_-y)}var d=x,C=d+1<o.m_vertexCount?d+1:0,f=o.m_vertices[C].x-o.m_vertices[d].x,b=o.m_vertices[C].y-o.m_vertices[d].y,V=Math.sqrt(f*f+b*b);if(f/=V,b/=V,V<Number.MIN_VALUE){if(r=l-o.m_vertices[d].x,t=a-o.m_vertices[d].y,c=Math.sqrt(r*r+t*t),r/=c,t/=c,c>y)return;return i.pointCount=1,i.normal.Set(s.col1.x*r+s.col2.x*t,s.col1.y*r+s.col2.y*t),n=i.points[0],n.id.features.incidentEdge=b2Collision.b2_nullFeature,n.id.features.incidentVertex=d,n.id.features.referenceFace=b2Collision.b2_nullFeature,n.id.features.flip=0,n.position.x=e.m_position.x-y*i.normal.x,n.position.y=e.m_position.y-y*i.normal.y,void(n.separation=c-y)}var M=(l-o.m_vertices[d].x)*f+(a-o.m_vertices[d].y)*b;n=i.points[0],n.id.features.incidentEdge=b2Collision.b2_nullFeature,n.id.features.incidentVertex=b2Collision.b2_nullFeature,n.id.features.referenceFace=b2Collision.b2_nullFeature,n.id.features.flip=0;var S,E;0>=M?(S=o.m_vertices[d].x,E=o.m_vertices[d].y,n.id.features.incidentVertex=d):M>=V?(S=o.m_vertices[C].x,E=o.m_vertices[C].y,n.id.features.incidentVertex=C):(S=f*M+o.m_vertices[d].x,E=b*M+o.m_vertices[d].y,n.id.features.incidentEdge=d),r=l-S,t=a-E,c=Math.sqrt(r*r+t*t),r/=c,t/=c,c>y||(i.pointCount=1,i.normal.Set(s.col1.x*r+s.col2.x*t,s.col1.y*r+s.col2.y*t),n.position.x=e.m_position.x-y*i.normal.x,n.position.y=e.m_position.y-y*i.normal.y,n.separation=c-y)},b2Collision.b2TestOverlap=function(i,o){var e=o.minVertex,n=i.maxVertex,r=e.x-n.x,t=e.y-n.y;e=i.minVertex,n=o.maxVertex;var l=e.x-n.x,a=e.y-n.y;return r>0||t>0?!1:l>0||a>0?!1:!0};